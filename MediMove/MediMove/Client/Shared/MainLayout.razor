@using MediMove.Client.temp;
@inject MediMoveAuthenticationStateProvider stateProvider
@inject NavigationManager NavManager
@inherits LayoutComponentBase


<div class="page background">
   
    <AuthorizeView>
        <div class="sidebar">
            <NavMenu />
        </div>
    </AuthorizeView>
    <main>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<style>
    .background {
        background: #fafafa; /*linear-gradient(135deg, #9b59b6, #e91e63);*/
    }
</style>
@code {
    //private bool IsAuthorized = false;

    //protected override async Task OnInitializedAsync()
    //{

    //    var state = await stateProvider.GetAuthenticationStateAsync();
    //    IsAuthorized = state.User.Identity.IsAuthenticated;
    //}

    //private async Task HandleLogout()
    //{
    //    await stateProvider.Logout();
    //    NavManager.NavigateTo("/login/", true);
    //}
}
