@page "/admin/account/create"
@using MediMove.Client.temp;
@using MediMove.Shared.Models.DTOs
@using MediMove.Shared.Models.Enums
@using MediMove.Client.Services
@using System.Globalization
@using Microsoft.AspNetCore.Components.Web
@using System.ComponentModel.DataAnnotations;
@inject MediMoveAuthenticationStateProvider _stcateProvider








<RadzenCard>
<h3>Select User Type</h3>
<div class="rz-text-align-left">
    <div style="width: 100%; max-width: 400px;">
        <RadzenDropDown @bind-Value="@selectedUserType" TValue="AccountType" Data=@accountTypes />
    </div>
</div>
</RadzenCard>

@if (selectedUserType == AccountType.Admin)
{
<div class="rz-text-align-left">
    <EditForm Model="adminModel" OnValidSubmit="HandleAdminSubmit">
        <RadzenCard>
            <RadzenLabel>
                <h3 class="rz-text-align-left">Admin Registration</h3>
            </RadzenLabel>
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div style="margin-bottom: 10px;">
                <label style="display: block; margin-bottom: 5px;">Email:</label>
                <RadzenTextBox @bind-Value="adminModel.Email" />
            </div>
            <div style="margin-bottom: 10px;">
                <label style="display: block; margin-bottom: 5px;">Password:</label>
                <RadzenPassword @bind-Value="adminModel.Password" />
            </div>
            <RadzenButton ButtonType="Radzen.ButtonType.Submit" Text="Register" ButtonStyle="Radzen.ButtonStyle.Primary" class="btn-block mr-2" />
        </RadzenCard>
    </EditForm>
</div>

}
else if (selectedUserType == AccountType.Paramedic)
{
    <EditForm Model="paramedicModel" OnValidSubmit="HandleParamedicSubmit">
        <RadzenCard>
            <RadzenLabel>
                    <h3 class="rz-text-align-left">Paramedic Registration</h3>
            </RadzenLabel>
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="rz-text-align-left">
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Email:</label>
                    <RadzenTextBox @bind-Value="paramedicModel.Email" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Password:</label>
                    <RadzenPassword @bind-Value="paramedicModel.Password" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">First Name:</label>
                    <RadzenTextBox @bind-Value="paramedicModel.FirstName" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Last Name:</label>
                    <RadzenTextBox @bind-Value="paramedicModel.LastName" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Street Address:</label>
                    <RadzenTextBox @bind-Value="paramedicModel.StreetAddress" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">House Number:</label>
                    <RadzenTextBox @bind-Value="paramedicModel.HouseNumber" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Apartment Number:</label>
                    <RadzenNumeric @bind-Value="paramedicModel.ApartmentNumber" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">City:</label>
                    <RadzenTextBox @bind-Value="paramedicModel.City" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Postal Code:</label>
                    <RadzenTextBox @bind-Value="paramedicModel.PostalCode" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">State/Province:</label>
                    <RadzenTextBox @bind-Value="paramedicModel.StateProvince" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Country:</label>
                    <RadzenTextBox @bind-Value="paramedicModel.Country" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Phone Number:</label>
                    <RadzenTextBox @bind-Value="paramedicModel.PhoneNumber" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Bank Account Number:</label>
                    <RadzenTextBox @bind-Value="paramedicModel.BankAccountNumber" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Is Driver:</label>
                    <RadzenCheckBox @bind-Value="paramedicModel.IsDriver" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Pay Per Hour:</label>
                    <RadzenNumeric @bind-Value="paramedicModel.PayPerHour" />
                </div>
                <!-- Add more fields as needed -->
            </div>
            <RadzenButton ButtonType="Radzen.ButtonType.Submit" Text="Register" ButtonStyle="Radzen.ButtonStyle.Primary" class="btn-block mr-2" />
        </RadzenCard>
    </EditForm>
}
else if (selectedUserType == AccountType.Dispatcher) 
{
    <EditForm Model="dispatcherModel" OnValidSubmit="HandleDispatcherSubmit">
        <RadzenCard>
            <RadzenLabel>
                    <h3 class="rz-text-align-left">Dispatcher Registration</h3>
            </RadzenLabel>
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="rz-text-align-left">
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Email:</label>
                    <RadzenTextBox @bind-Value="dispatcherModel.Email" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Password:</label>
                    <RadzenPassword @bind-Value="dispatcherModel.Password" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">First Name:</label>
                    <RadzenTextBox @bind-Value="dispatcherModel.FirstName" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Last Name:</label>
                    <RadzenTextBox @bind-Value="dispatcherModel.LastName" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Street Address:</label>
                    <RadzenTextBox @bind-Value="dispatcherModel.StreetAddress" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">House Number:</label>
                    <RadzenTextBox @bind-Value="dispatcherModel.HouseNumber" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Apartment Number:</label>
                    <RadzenNumeric @bind-Value="dispatcherModel.ApartmentNumber" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">City:</label>
                    <RadzenTextBox @bind-Value="dispatcherModel.City" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Postal Code:</label>
                    <RadzenTextBox @bind-Value="dispatcherModel.PostalCode" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">State/Province:</label>
                    <RadzenTextBox @bind-Value="dispatcherModel.StateProvince" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Country:</label>
                    <RadzenTextBox @bind-Value="dispatcherModel.Country" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Phone Number:</label>
                    <RadzenTextBox @bind-Value="dispatcherModel.PhoneNumber" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Bank Account Number:</label>
                    <RadzenTextBox @bind-Value="dispatcherModel.BankAccountNumber" />
                </div>
                <div style="margin-bottom: 10px;">
                    <label style="display: block; margin-bottom: 5px;">Salary:</label>
                    <RadzenNumeric @bind-Value="dispatcherModel.Salary" />
                </div>
                <!-- Add more fields as needed -->
            </div>
            <RadzenButton ButtonType="Radzen.ButtonType.Submit" Text="Register" ButtonStyle="Radzen.ButtonStyle.Primary" class="btn-block mr-2" />
        </RadzenCard>
    </EditForm>
}


@if (statusCode is not null)
{
    <div>
        @statusCode.statusCode.ToString();
    </div>
}
@if(errorResponse is not null)
{
    <RadzenCard>
        <h3>Errors</h3>
        <div class="rz-text-align-left">
            <div style="width: 100%; max-width: 400px;">
                <div style="margin-bottom: 10px;">
                    <p>Error type: @errorResponse.Type</p>
                </div>
                <div style="margin-bottom: 10px;">
                    <p>Error Title: @errorResponse.Title</p>
                </div>
                <div style="margin-bottom: 10px;">
                    <p>Error status: @errorResponse.Status</p>
                </div>
                <div style="margin-bottom: 10px;">
                    <p>Error TraceId: @errorResponse.TraceId</p>
                </div>
            </div>
        @foreach(var error in errorResponse.Errors)
        {
            <div>
                <p>Key: @error.Key</p>
            </div>
            <div>
                <p>ErrorList:</p>
                @foreach( var message in error.Value)
                {
                    <div>
                        <p>Message:</p>
                        <p>@message</p>
                    </div>
                }
            </div>
        }
        </div>

    </RadzenCard>
}

@code {
    private AccountType selectedUserType;
    private StandardResponse? statusCode = null;
    private ErrorResponse? errorResponse = null;
    private RegisterAdminRequest adminModel = new();
    private RegisterParamedicRequest paramedicModel = new();
    private RegisterDispatcherRequest dispatcherModel = new();

    IEnumerable<AccountType> accountTypes = Enum.GetValues(typeof(AccountType)).Cast<AccountType>();



    private async Task HandleAdminSubmit()
    {
        var response = await _stcateProvider.Register(adminModel);
        CheckForErrors(response);


    }

    private async Task HandleParamedicSubmit()
    {
        var response = await _stcateProvider.Register(paramedicModel);
        CheckForErrors(response);
    }

    private async Task HandleDispatcherSubmit()
    {
        var response = await _stcateProvider.Register(dispatcherModel);
        CheckForErrors(response);
    }

    private  void CheckForErrors(MediMoveResponse<StandardResponse> response)
    {    
        statusCode = response.CorrectResponse;
        errorResponse = response.ErrorResponse;
    }

    public enum AccountType
    {
        [Display(Name = "Admin")]
        Admin,

        [Display(Name = "Dispatcher")]
        Dispatcher,

        [Display(Name = "Paramedic")]
        Paramedic
    }
}



